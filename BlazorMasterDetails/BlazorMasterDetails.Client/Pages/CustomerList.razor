@inject IJSRuntime js
@rendermode InteractiveWebAssembly
@inject CustomerSevice service
@page "/Customers"


<h3>Customers List</h3>
<NavLink class="nav-link btn btn-outline-success" href="add">Add Customer</NavLink>
<br />
<hr />
<table class="table table-responsive table-striped table-hover">
	<thead>
		<tr>
			<th>ID</th>
			<th>Name</th>
			<th>IsNew?</th>
			<th>Operation</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var cus in data)
		{

			<tr>
				<td>@cus.CustomerID</td>
				<td>@cus.Name</td>
				<td><InputCheckbox readonly @bind-Value="@cus.IsNew" disabled /></td>
				<td class="btn-group">
					<a class="nav-link btn btn-outline-success" href="/edit/@cus.CustomerID">Edit</a>
					<a class="nav-link btn btn-outline-info" href="/details/@cus.CustomerID">Details</a>
					<button class="btn btn-outline-danger" @onclick="()=> DeleteData(cus)">
						Delete
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>



@code {

	private IList<Customer>? data = new List<Customer>();


	protected override async Task OnInitializedAsync()
	{

		await loadData();

	}

	async Task loadData()
	{
		this.data = await this.service.GetAll();
	}

	async Task DeleteData(Customer customer)
	{
		var confirm = await js.InvokeAsync<bool>("confirm", $"delete data of {customer.Name}?");

		if (!confirm) return;


		var result = await this.service.Delete(customer.CustomerID);

		if (result.IsSuccessStatusCode)
		{
			await loadData();
		}
	}



}
